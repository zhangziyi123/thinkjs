{
    "version": 3,
    "sources": [
        "adapter.js"
    ],
    "names": [
        "fileCache",
        "require",
        "nunjucks",
        "fileSession",
        "mysql",
        "Console",
        "File",
        "DateFile",
        "path",
        "isDev",
        "think",
        "env",
        "postgresql",
        "exports",
        "cache",
        "type",
        "common",
        "timeout",
        "file",
        "handle",
        "cachePath",
        "join",
        "ROOT_PATH",
        "pathDepth",
        "gcInterval",
        "model",
        "logConnect",
        "logSql",
        "logger",
        "msg",
        "info",
        "database",
        "prefix",
        "encoding",
        "host",
        "port",
        "user",
        "password",
        "dateStrings",
        "postgre",
        "connectionLimit",
        "session",
        "cookie",
        "name",
        "sessionPath",
        "view",
        "viewPath",
        "sep",
        "extname",
        "console",
        "backups",
        "absolute",
        "maxLogSize",
        "filename",
        "dateFile",
        "level",
        "pattern",
        "alwaysIncludePattern"
    ],
    "mappings": "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",
    "file": "adapter.js",
    "sourcesContent": [
        "const fileCache = require('think-cache-file');\nconst nunjucks = require('think-view-nunjucks');\nconst fileSession = require('think-session-file');\nconst mysql = require('think-model-mysql');\nconst { Console, File, DateFile } = require('think-logger3');\nconst path = require('path');\nconst isDev = think.env === 'development';\nconst postgresql = require('think-model-postgresql');\n\n/**\n * cache adapter config\n * @type {Object}\n */\nexports.cache = {\n    type: 'file',\n    common: {\n        timeout: 24 * 60 * 60 * 1000 // millisecond\n    },\n    file: {\n        handle: fileCache,\n        cachePath: path.join(think.ROOT_PATH, 'runtime/cache'), // absoulte path is necessarily required\n        pathDepth: 1,\n        gcInterval: 24 * 60 * 60 * 1000 // gc interval\n    }\n};\n\n/**\n * model adapter config\n * @type {Object}\n */\nexports.model = {\n    type: 'mysql',\n    common: {\n        logConnect: isDev,\n        logSql: isDev,\n        logger: msg => think.logger.info(msg)\n    },\n    mysql: {\n        handle: mysql,\n        database: '',\n        prefix: 'think_',\n        encoding: 'utf8',\n        host: '127.0.0.1',\n        port: '',\n        user: 'root',\n        password: 'root',\n        dateStrings: true\n    }\n};\n\n/**\n * model adapter config\n * @type {Object}\n */\nexports.model = {\n    type: 'postgre',\n    common: {\n        logConnect: isDev,\n        logSql: isDev,\n        logger: msg => think.logger.info(msg)\n    },\n    postgre: {\n        handle: postgresql,\n        database: 'userms',\n        prefix: '', // 数据表前缀，如果一个数据库里有多个项目，那项目之间的数据表可以通过前缀来区分\n        host: '127.0.0.1',\n        port: 3211,\n        user: 'postgres',\n        password: 'admin',\n        connectionLimit: 1 // 连接池的连接个数，默认为 1\n    }\n};\n\n/**\n * session adapter config\n * @type {Object}\n */\nexports.session = {\n    type: 'file',\n    common: {\n        cookie: {\n            name: 'thinkjs'\n            // keys: ['werwer', 'werwer'],\n            // signed: true\n        }\n    },\n    file: {\n        handle: fileSession,\n        sessionPath: path.join(think.ROOT_PATH, 'runtime/session')\n    }\n};\n\n/**\n * view adapter config\n * @type {Object}\n */\nexports.view = {\n    type: 'nunjucks',\n    common: {\n        viewPath: path.join(think.ROOT_PATH, 'view'),\n        sep: '_',\n        extname: '.html'\n    },\n    nunjucks: {\n        handle: nunjucks\n    }\n};\n\n/**\n * logger adapter config\n * @type {Object}\n */\nexports.logger = {\n    type: isDev ? 'console' : 'dateFile',\n    console: {\n        handle: Console\n    },\n    file: {\n        handle: File,\n        backups: 10, // max chunk number\n        absolute: true,\n        maxLogSize: 50 * 1024, // 50M\n        filename: path.join(think.ROOT_PATH, 'logs/app.log')\n    },\n    dateFile: {\n        handle: DateFile,\n        level: 'ALL',\n        absolute: true,\n        pattern: '-yyyy-MM-dd',\n        alwaysIncludePattern: true,\n        filename: path.join(think.ROOT_PATH, 'logs/app.log')\n    }\n};\n//# sourceMappingURL=adapter.js.map"
    ]
}